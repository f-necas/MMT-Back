DROP DATABASE IF EXISTS mmt;
CREATE DATABASE IF NOT EXISTS mmt CHARACTER SET 'utf8mb4';

USE mmt;

DROP TABLE IF EXISTS UserProfile;
CREATE TABLE IF NOT EXISTS UserProfile
(                                                -- Represents an independent entity type.
    UserId          INT      NOT NULL AUTO_INCREMENT,
    FirstName       CHAR(30) NOT NULL,
    LastName        CHAR(30) NOT NULL,
    Username        CHAR(30) NOT NULL,
    Password        CHAR(30) NOT NULL,
    CreatedDateTime DATETIME NOT NULL DEFAULT NOW(),
    --
    CONSTRAINT UserProfile_PK PRIMARY KEY (UserId),
    CONSTRAINT UserProfile_AK1 UNIQUE (          -- Composite ALTERNATE KEY.
                                       FirstName,
                                       LastName
        ),
    CONSTRAINT UserProfile_AK2 UNIQUE (Username) -- Single-column ALTERNATE KEY.
);

DROP TABLE IF EXISTS Friendship;
CREATE TABLE IF NOT EXISTS Friendship
(                                                                    -- Stands for an associative entity type.
    RequesterId     INT      NOT NULL,
    AddresseeId     INT      NOT NULL,                               -- Fixed with a well-delimited data type.
    CreatedDateTime DATETIME NOT NULL,
    --
    CONSTRAINT Friendship_PK PRIMARY KEY (RequesterId, AddresseeId), -- Composite PRIMARY KEY.
    CONSTRAINT FriendshipToRequester_FK FOREIGN KEY (RequesterId)
        REFERENCES UserProfile (UserId),
    CONSTRAINT FriendshipToAddressee_FK FOREIGN KEY (AddresseeId)
        REFERENCES UserProfile (UserId)
);

--
DROP TABLE IF EXISTS FriendshipStatusCode;
CREATE TABLE IF NOT EXISTS FriendshipStatusCode
(                                                    -- Denotes an independent entity type.
    StatusCode CHAR(1)  NOT NULL,
    Name       CHAR(30) NOT NULL,
    --
    CONSTRAINT FriendshipStatusCode_PK PRIMARY KEY (StatusCode),
    CONSTRAINT FriendshipStatusCode_AK UNIQUE (Name) -- ALTERNATE KEY.
);

DROP TABLE IF EXISTS FriendshipStatus;
CREATE TABLE IF NOT EXISTS FriendshipStatus
(                                                                                             -- Represents an associative entity type.
    RequesterId       INT      NOT NULL,
    AddresseeId       INT      NOT NULL,
    SpecifiedDateTime DATETIME NOT NULL,
    StatusCode        CHAR(1)  NOT NULL,
    SpecifierId       INT      NOT NULL,
    --
    CONSTRAINT FriendshipStatus_PK PRIMARY KEY (RequesterId, AddresseeId, SpecifiedDateTime), -- Composite PRIMARY KEY.
    CONSTRAINT FriendshipStatusToFriendship_FK FOREIGN KEY (RequesterId, AddresseeId)
        REFERENCES Friendship (RequesterId, AddresseeId),                                     -- Composite FOREIGN KEY.
    CONSTRAINT FriendshipStatusToFriendshipStatusCode_FK FOREIGN KEY (StatusCode)
        REFERENCES FriendshipStatusCode (StatusCode),
    CONSTRAINT FriendshipStatusToSpecifier_FK FOREIGN KEY (SpecifierId)
        REFERENCES UserProfile (UserId)
);

DROP TABLE IF EXISTS Place;
CREATE TABLE IF NOT EXISTS Place
(
    PlaceId          INT      NOT NULL,
    PlaceCode        CHAR(30) NOT NULL,
    PlaceAdress      TEXT,
    PlaceCoordinateX DOUBLE,
    PlaceCoordinateY DOUBLE,
    CONSTRAINT PlaceId_PK PRIMARY KEY (PlaceId)
);

DROP TABLE IF EXISTS UserEvent;
CREATE TABLE IF NOT EXISTS UserEvent
(
    UserEventId INT  NOT NULL,
    RequesterId INT  NOT NULL,
    EventDate   DATE NOT NULL,
    EventTime   TIME,
    EventPlace  INT  NOT NULL,
    --
    CONSTRAINT UserEvent_PK PRIMARY KEY (UserEventId),
    CONSTRAINT UserEventToRequesterId_FK FOREIGN KEY (RequesterId) REFERENCES UserProfile (UserId)
);

DROP TABLE IF EXISTS UserSavedPlaces;
CREATE TABLE IF NOT EXISTS UserSavedPlaces
(
    UserId  INT NOT NULL,
    PlaceId INT NOT NULL,
    CONSTRAINT UserSavedPlacesToUserProfile FOREIGN KEY (UserId)
        REFERENCES UserProfile (UserId),
    CONSTRAINT UserSavedPlacesToPlace FOREIGN KEY (PlaceId)
        REFERENCES Place (PlaceId)
);

--
DROP TABLE IF EXISTS InvitationStatusCode;
CREATE TABLE IF NOT EXISTS InvitationStatusCode
(                                                    -- Denotes an independent entity type.
    StatusCode CHAR(1)  NOT NULL,
    Name       CHAR(30) NOT NULL,
    --
    CONSTRAINT InvitationStatusCode_PK PRIMARY KEY (StatusCode),
    CONSTRAINT InvitationStatusCode_AK UNIQUE (Name) -- ALTERNATE KEY.
);


DROP TABLE IF EXISTS Invitation;
CREATE TABLE IF NOT EXISTS Invitation
(
    UserEventId          INT     NOT NULL,
    InvitationStatusCode CHAR(1) NOT NULL,
    AddresseeId          INT     NOT NULL,
    CONSTRAINT InvitationToUserEvent_FK FOREIGN KEY (UserEventId)
        REFERENCES UserEvent (UserEventId),
    CONSTRAINT InvitationToAddressee_FK FOREIGN KEY (AddresseeId)
        REFERENCES UserProfile (UserId),
    CONSTRAINT InvitationToInvitationStatusCode_FK FOREIGN KEY (InvitationStatusCode) REFERENCES InvitationStatusCode (StatusCode)
);

